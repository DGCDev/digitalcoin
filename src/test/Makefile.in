# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/src/Makefile.include
@EMBEDDED_LEVELDB_TRUE@am__append_1 =  \
@EMBEDDED_LEVELDB_TRUE@	-I$(top_srcdir)/src/leveldb/include \
@EMBEDDED_LEVELDB_TRUE@	-I$(top_srcdir)/src/leveldb/helpers/memenv
@EMBEDDED_LEVELDB_TRUE@am__append_2 = $(top_builddir)/src/leveldb/libleveldb.a
@EMBEDDED_LEVELDB_TRUE@am__append_3 = $(top_builddir)/src/leveldb/libmemenv.a
bin_PROGRAMS = test_digitalcoin$(EXEEXT)
TESTS = test_digitalcoin$(EXEEXT)
@ENABLE_WALLET_TRUE@am__append_4 = $(LIBBITCOIN_WALLET)
@ENABLE_WALLET_TRUE@am__append_5 = \
@ENABLE_WALLET_TRUE@   accounting_tests.cpp \
@ENABLE_WALLET_TRUE@   wallet_tests.cpp \
@ENABLE_WALLET_TRUE@   rpc_wallet_tests.cpp

subdir = src/test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/src/m4/ax_boost_base.m4 \
	$(top_srcdir)/src/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/src/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/src/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/src/m4/ax_boost_system.m4 \
	$(top_srcdir)/src/m4/ax_boost_thread.m4 \
	$(top_srcdir)/src/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/src/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/src/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/src/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/src/m4/ax_pthread.m4 \
	$(top_srcdir)/src/m4/bitcoin_find_bdb48.m4 \
	$(top_srcdir)/src/m4/bitcoin_qt.m4 \
	$(top_srcdir)/src/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/bitcoin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__test_digitalcoin_SOURCES_DIST = alert_tests.cpp \
	allocator_tests.cpp base32_tests.cpp base58_tests.cpp \
	base64_tests.cpp bignum_tests.cpp bloom_tests.cpp \
	canonical_tests.cpp checkblock_tests.cpp Checkpoints_tests.cpp \
	compress_tests.cpp DoS_tests.cpp getarg_tests.cpp \
	key_tests.cpp main_tests.cpp miner_tests.cpp mruset_tests.cpp \
	multisig_tests.cpp netbase_tests.cpp pmt_tests.cpp \
	rpc_tests.cpp script_P2SH_tests.cpp script_tests.cpp \
	serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \
	transaction_tests.cpp uint256_tests.cpp util_tests.cpp \
	scriptnum_tests.cpp sighash_tests.cpp data/script_valid.json \
	data/base58_keys_valid.json data/sig_canonical.json \
	data/sig_noncanonical.json data/base58_encode_decode.json \
	data/base58_keys_invalid.json data/script_invalid.json \
	data/tx_invalid.json data/tx_valid.json data/sighash.json \
	data/alertTests.raw accounting_tests.cpp wallet_tests.cpp \
	rpc_wallet_tests.cpp
am__objects_1 =
@ENABLE_WALLET_TRUE@am__objects_2 = test_digitalcoin-accounting_tests.$(OBJEXT) \
@ENABLE_WALLET_TRUE@	test_digitalcoin-wallet_tests.$(OBJEXT) \
@ENABLE_WALLET_TRUE@	test_digitalcoin-rpc_wallet_tests.$(OBJEXT)
am_test_digitalcoin_OBJECTS = test_digitalcoin-alert_tests.$(OBJEXT) \
	test_digitalcoin-allocator_tests.$(OBJEXT) \
	test_digitalcoin-base32_tests.$(OBJEXT) \
	test_digitalcoin-base58_tests.$(OBJEXT) \
	test_digitalcoin-base64_tests.$(OBJEXT) \
	test_digitalcoin-bignum_tests.$(OBJEXT) \
	test_digitalcoin-bloom_tests.$(OBJEXT) \
	test_digitalcoin-canonical_tests.$(OBJEXT) \
	test_digitalcoin-checkblock_tests.$(OBJEXT) \
	test_digitalcoin-Checkpoints_tests.$(OBJEXT) \
	test_digitalcoin-compress_tests.$(OBJEXT) \
	test_digitalcoin-DoS_tests.$(OBJEXT) \
	test_digitalcoin-getarg_tests.$(OBJEXT) \
	test_digitalcoin-key_tests.$(OBJEXT) \
	test_digitalcoin-main_tests.$(OBJEXT) \
	test_digitalcoin-miner_tests.$(OBJEXT) \
	test_digitalcoin-mruset_tests.$(OBJEXT) \
	test_digitalcoin-multisig_tests.$(OBJEXT) \
	test_digitalcoin-netbase_tests.$(OBJEXT) \
	test_digitalcoin-pmt_tests.$(OBJEXT) \
	test_digitalcoin-rpc_tests.$(OBJEXT) \
	test_digitalcoin-script_P2SH_tests.$(OBJEXT) \
	test_digitalcoin-script_tests.$(OBJEXT) \
	test_digitalcoin-serialize_tests.$(OBJEXT) \
	test_digitalcoin-sigopcount_tests.$(OBJEXT) \
	test_digitalcoin-test_bitcoin.$(OBJEXT) \
	test_digitalcoin-transaction_tests.$(OBJEXT) \
	test_digitalcoin-uint256_tests.$(OBJEXT) \
	test_digitalcoin-util_tests.$(OBJEXT) \
	test_digitalcoin-scriptnum_tests.$(OBJEXT) \
	test_digitalcoin-sighash_tests.$(OBJEXT) $(am__objects_1) \
	$(am__objects_1) $(am__objects_2)
am__objects_3 = $(am__objects_1) $(am__objects_1)
nodist_test_digitalcoin_OBJECTS = $(am__objects_3)
test_digitalcoin_OBJECTS = $(am_test_digitalcoin_OBJECTS) \
	$(nodist_test_digitalcoin_OBJECTS)
am__DEPENDENCIES_1 = $(am__append_2)
am__DEPENDENCIES_2 = $(am__append_3)
am__DEPENDENCIES_3 =
test_digitalcoin_DEPENDENCIES = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_COMMON) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__append_4) $(am__DEPENDENCIES_3)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/src/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(test_digitalcoin_SOURCES) \
	$(nodist_test_digitalcoin_SOURCES)
DIST_SOURCES = $(am__test_digitalcoin_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BDB_CPPFLAGS = @BDB_CPPFLAGS@
BDB_LIBS = @BDB_LIBS@
BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_LIBS = @BOOST_LIBS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_UNIT_TEST_FRAMEWORK_LIB = @BOOST_UNIT_TEST_FRAMEWORK_LIB@
BREW = @BREW@
BUILD_QT = @BUILD_QT@
BUILD_TEST = @BUILD_TEST@
BUILD_TEST_QT = @BUILD_TEST_QT@
CC = @CC@
CCACHE = @CCACHE@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLIENT_VERSION_BUILD = @CLIENT_VERSION_BUILD@
CLIENT_VERSION_IS_RELEASE = @CLIENT_VERSION_IS_RELEASE@
CLIENT_VERSION_MAJOR = @CLIENT_VERSION_MAJOR@
CLIENT_VERSION_MINOR = @CLIENT_VERSION_MINOR@
CLIENT_VERSION_REVISION = @CLIENT_VERSION_REVISION@
COMPARISON_TOOL_REORG_TESTS = @COMPARISON_TOOL_REORG_TESTS@
COPYRIGHT_YEAR = @COPYRIGHT_YEAR@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CRYPTO_CFLAGS = @CRYPTO_CFLAGS@
CRYPTO_LIBS = @CRYPTO_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GCOV = @GCOV@
GENHTML = @GENHTML@
GENISOIMAGE = @GENISOIMAGE@
GIT = @GIT@
GREP = @GREP@
HEXDUMP = @HEXDUMP@
INCLUDES = @INCLUDES@
INSTALL = @INSTALL@
INSTALLNAMETOOL = @INSTALLNAMETOOL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAVA = @JAVA@
JAVA_COMPARISON_TOOL = @JAVA_COMPARISON_TOOL@
LCOV = @LCOV@
LDFLAGS = @LDFLAGS@
LEVELDB_CPPFLAGS = @LEVELDB_CPPFLAGS@ $(am__append_1)
LEVELDB_TARGET_FLAGS = @LEVELDB_TARGET_FLAGS@
LIBLEVELDB = @LIBLEVELDB@ $(am__append_2)
LIBMEMENV = @LIBMEMENV@ $(am__append_3)
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LRELEASE = @LRELEASE@
LTLIBOBJS = @LTLIBOBJS@
LUPDATE = @LUPDATE@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MAKENSIS = @MAKENSIS@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MOC_DEFS = @MOC_DEFS@
OBJC = @OBJC@
OBJCDEPMODE = @OBJCDEPMODE@
OBJCFLAGS = @OBJCFLAGS@
OBJCXX = @OBJCXX@
OBJCXXFLAGS = @OBJCXXFLAGS@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PORT = @PORT@
PROTOBUF_CFLAGS = @PROTOBUF_CFLAGS@
PROTOBUF_LIBS = @PROTOBUF_LIBS@
PROTOC = @PROTOC@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
QR_CFLAGS = @QR_CFLAGS@
QR_LIBS = @QR_LIBS@
QT_CFLAGS = @QT_CFLAGS@
QT_DBUS_CFLAGS = @QT_DBUS_CFLAGS@
QT_DBUS_INCLUDES = @QT_DBUS_INCLUDES@
QT_DBUS_LIBS = @QT_DBUS_LIBS@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_LIBS = @QT_LIBS@
QT_SELECT = @QT_SELECT@
QT_TEST_CFLAGS = @QT_TEST_CFLAGS@
QT_TEST_INCLUDES = @QT_TEST_INCLUDES@
QT_TEST_LIBS = @QT_TEST_LIBS@
RANLIB = @RANLIB@
RCC = @RCC@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_CFLAGS = @SSL_CFLAGS@
SSL_LIBS = @SSL_LIBS@
STRIP = @STRIP@
TESTDEFS = @TESTDEFS@
UIC = @UIC@
USE_QRCODE = @USE_QRCODE@
USE_UPNP = @USE_UPNP@
VERSION = @VERSION@
WINDOWS_BITS = @WINDOWS_BITS@
WINDRES = @WINDRES@
XGETTEXT = @XGETTEXT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_OBJC = @ac_ct_OBJC@
ac_ct_OBJCXX = @ac_ct_OBJCXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = $(INCLUDES) -I$(top_builddir)/src/obj $(BDB_CPPFLAGS) \
	$(BOOST_CPPFLAGS) $(BOOST_INCLUDES) $(LEVELDB_CPPFLAGS) \
	-I$(top_srcdir)/src
AM_LDFLAGS = $(PTHREAD_CFLAGS)
AM_CFLAGS = -fPIC -msse2
LIBBITCOIN_SERVER = $(top_builddir)/src/libbitcoin_server.a
LIBBITCOIN_WALLET = $(top_builddir)/src/libbitcoin_wallet.a
LIBBITCOIN_COMMON = $(top_builddir)/src/libbitcoin_common.a
LIBBITCOIN_CLI = $(top_builddir)/src/libbitcoin_cli.a
LIBBITCOINQT = $(top_builddir)/src/qt/libbitcoinqt.a
JSON_TEST_FILES = \
  data/script_valid.json \
  data/base58_keys_valid.json \
  data/sig_canonical.json \
  data/sig_noncanonical.json \
  data/base58_encode_decode.json \
  data/base58_keys_invalid.json \
  data/script_invalid.json \
  data/tx_invalid.json \
  data/tx_valid.json \
  data/sighash.json

RAW_TEST_FILES = data/alertTests.raw
BUILT_SOURCES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)

# test_bitcoin binary #
test_digitalcoin_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS)
test_digitalcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) $(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(am__append_4) $(BDB_LIBS)
test_digitalcoin_SOURCES = alert_tests.cpp allocator_tests.cpp \
	base32_tests.cpp base58_tests.cpp base64_tests.cpp \
	bignum_tests.cpp bloom_tests.cpp canonical_tests.cpp \
	checkblock_tests.cpp Checkpoints_tests.cpp compress_tests.cpp \
	DoS_tests.cpp getarg_tests.cpp key_tests.cpp main_tests.cpp \
	miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \
	netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp \
	script_P2SH_tests.cpp script_tests.cpp serialize_tests.cpp \
	sigopcount_tests.cpp test_bitcoin.cpp transaction_tests.cpp \
	uint256_tests.cpp util_tests.cpp scriptnum_tests.cpp \
	sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES) \
	$(am__append_5)
nodist_test_digitalcoin_SOURCES = $(BUILT_SOURCES)
CLEANFILES = *.gcda *.gcno $(BUILT_SOURCES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .mm .o .obj .rc
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
test_digitalcoin$(EXEEXT): $(test_digitalcoin_OBJECTS) $(test_digitalcoin_DEPENDENCIES) 
	@rm -f test_digitalcoin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_digitalcoin_OBJECTS) $(test_digitalcoin_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-Checkpoints_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-DoS_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-accounting_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-alert_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-allocator_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-base32_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-base58_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-base64_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-bignum_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-bloom_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-canonical_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-checkblock_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-compress_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-getarg_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-key_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-main_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-miner_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-mruset_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-multisig_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-netbase_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-pmt_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-rpc_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-rpc_wallet_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-script_P2SH_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-script_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-scriptnum_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-serialize_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-sighash_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-sigopcount_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-test_bitcoin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-transaction_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-uint256_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-util_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_digitalcoin-wallet_tests.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

test_digitalcoin-alert_tests.o: alert_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-alert_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-alert_tests.Tpo -c -o test_digitalcoin-alert_tests.o `test -f 'alert_tests.cpp' || echo '$(srcdir)/'`alert_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-alert_tests.Tpo $(DEPDIR)/test_digitalcoin-alert_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='alert_tests.cpp' object='test_digitalcoin-alert_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-alert_tests.o `test -f 'alert_tests.cpp' || echo '$(srcdir)/'`alert_tests.cpp

test_digitalcoin-alert_tests.obj: alert_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-alert_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-alert_tests.Tpo -c -o test_digitalcoin-alert_tests.obj `if test -f 'alert_tests.cpp'; then $(CYGPATH_W) 'alert_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/alert_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-alert_tests.Tpo $(DEPDIR)/test_digitalcoin-alert_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='alert_tests.cpp' object='test_digitalcoin-alert_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-alert_tests.obj `if test -f 'alert_tests.cpp'; then $(CYGPATH_W) 'alert_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/alert_tests.cpp'; fi`

test_digitalcoin-allocator_tests.o: allocator_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-allocator_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-allocator_tests.Tpo -c -o test_digitalcoin-allocator_tests.o `test -f 'allocator_tests.cpp' || echo '$(srcdir)/'`allocator_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-allocator_tests.Tpo $(DEPDIR)/test_digitalcoin-allocator_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='allocator_tests.cpp' object='test_digitalcoin-allocator_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-allocator_tests.o `test -f 'allocator_tests.cpp' || echo '$(srcdir)/'`allocator_tests.cpp

test_digitalcoin-allocator_tests.obj: allocator_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-allocator_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-allocator_tests.Tpo -c -o test_digitalcoin-allocator_tests.obj `if test -f 'allocator_tests.cpp'; then $(CYGPATH_W) 'allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/allocator_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-allocator_tests.Tpo $(DEPDIR)/test_digitalcoin-allocator_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='allocator_tests.cpp' object='test_digitalcoin-allocator_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-allocator_tests.obj `if test -f 'allocator_tests.cpp'; then $(CYGPATH_W) 'allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/allocator_tests.cpp'; fi`

test_digitalcoin-base32_tests.o: base32_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-base32_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-base32_tests.Tpo -c -o test_digitalcoin-base32_tests.o `test -f 'base32_tests.cpp' || echo '$(srcdir)/'`base32_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-base32_tests.Tpo $(DEPDIR)/test_digitalcoin-base32_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base32_tests.cpp' object='test_digitalcoin-base32_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-base32_tests.o `test -f 'base32_tests.cpp' || echo '$(srcdir)/'`base32_tests.cpp

test_digitalcoin-base32_tests.obj: base32_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-base32_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-base32_tests.Tpo -c -o test_digitalcoin-base32_tests.obj `if test -f 'base32_tests.cpp'; then $(CYGPATH_W) 'base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/base32_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-base32_tests.Tpo $(DEPDIR)/test_digitalcoin-base32_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base32_tests.cpp' object='test_digitalcoin-base32_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-base32_tests.obj `if test -f 'base32_tests.cpp'; then $(CYGPATH_W) 'base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/base32_tests.cpp'; fi`

test_digitalcoin-base58_tests.o: base58_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-base58_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-base58_tests.Tpo -c -o test_digitalcoin-base58_tests.o `test -f 'base58_tests.cpp' || echo '$(srcdir)/'`base58_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-base58_tests.Tpo $(DEPDIR)/test_digitalcoin-base58_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base58_tests.cpp' object='test_digitalcoin-base58_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-base58_tests.o `test -f 'base58_tests.cpp' || echo '$(srcdir)/'`base58_tests.cpp

test_digitalcoin-base58_tests.obj: base58_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-base58_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-base58_tests.Tpo -c -o test_digitalcoin-base58_tests.obj `if test -f 'base58_tests.cpp'; then $(CYGPATH_W) 'base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/base58_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-base58_tests.Tpo $(DEPDIR)/test_digitalcoin-base58_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base58_tests.cpp' object='test_digitalcoin-base58_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-base58_tests.obj `if test -f 'base58_tests.cpp'; then $(CYGPATH_W) 'base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/base58_tests.cpp'; fi`

test_digitalcoin-base64_tests.o: base64_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-base64_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-base64_tests.Tpo -c -o test_digitalcoin-base64_tests.o `test -f 'base64_tests.cpp' || echo '$(srcdir)/'`base64_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-base64_tests.Tpo $(DEPDIR)/test_digitalcoin-base64_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base64_tests.cpp' object='test_digitalcoin-base64_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-base64_tests.o `test -f 'base64_tests.cpp' || echo '$(srcdir)/'`base64_tests.cpp

test_digitalcoin-base64_tests.obj: base64_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-base64_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-base64_tests.Tpo -c -o test_digitalcoin-base64_tests.obj `if test -f 'base64_tests.cpp'; then $(CYGPATH_W) 'base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/base64_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-base64_tests.Tpo $(DEPDIR)/test_digitalcoin-base64_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base64_tests.cpp' object='test_digitalcoin-base64_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-base64_tests.obj `if test -f 'base64_tests.cpp'; then $(CYGPATH_W) 'base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/base64_tests.cpp'; fi`

test_digitalcoin-bignum_tests.o: bignum_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-bignum_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-bignum_tests.Tpo -c -o test_digitalcoin-bignum_tests.o `test -f 'bignum_tests.cpp' || echo '$(srcdir)/'`bignum_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-bignum_tests.Tpo $(DEPDIR)/test_digitalcoin-bignum_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bignum_tests.cpp' object='test_digitalcoin-bignum_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-bignum_tests.o `test -f 'bignum_tests.cpp' || echo '$(srcdir)/'`bignum_tests.cpp

test_digitalcoin-bignum_tests.obj: bignum_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-bignum_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-bignum_tests.Tpo -c -o test_digitalcoin-bignum_tests.obj `if test -f 'bignum_tests.cpp'; then $(CYGPATH_W) 'bignum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/bignum_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-bignum_tests.Tpo $(DEPDIR)/test_digitalcoin-bignum_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bignum_tests.cpp' object='test_digitalcoin-bignum_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-bignum_tests.obj `if test -f 'bignum_tests.cpp'; then $(CYGPATH_W) 'bignum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/bignum_tests.cpp'; fi`

test_digitalcoin-bloom_tests.o: bloom_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-bloom_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-bloom_tests.Tpo -c -o test_digitalcoin-bloom_tests.o `test -f 'bloom_tests.cpp' || echo '$(srcdir)/'`bloom_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-bloom_tests.Tpo $(DEPDIR)/test_digitalcoin-bloom_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bloom_tests.cpp' object='test_digitalcoin-bloom_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-bloom_tests.o `test -f 'bloom_tests.cpp' || echo '$(srcdir)/'`bloom_tests.cpp

test_digitalcoin-bloom_tests.obj: bloom_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-bloom_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-bloom_tests.Tpo -c -o test_digitalcoin-bloom_tests.obj `if test -f 'bloom_tests.cpp'; then $(CYGPATH_W) 'bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-bloom_tests.Tpo $(DEPDIR)/test_digitalcoin-bloom_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bloom_tests.cpp' object='test_digitalcoin-bloom_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-bloom_tests.obj `if test -f 'bloom_tests.cpp'; then $(CYGPATH_W) 'bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom_tests.cpp'; fi`

test_digitalcoin-canonical_tests.o: canonical_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-canonical_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-canonical_tests.Tpo -c -o test_digitalcoin-canonical_tests.o `test -f 'canonical_tests.cpp' || echo '$(srcdir)/'`canonical_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-canonical_tests.Tpo $(DEPDIR)/test_digitalcoin-canonical_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='canonical_tests.cpp' object='test_digitalcoin-canonical_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-canonical_tests.o `test -f 'canonical_tests.cpp' || echo '$(srcdir)/'`canonical_tests.cpp

test_digitalcoin-canonical_tests.obj: canonical_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-canonical_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-canonical_tests.Tpo -c -o test_digitalcoin-canonical_tests.obj `if test -f 'canonical_tests.cpp'; then $(CYGPATH_W) 'canonical_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/canonical_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-canonical_tests.Tpo $(DEPDIR)/test_digitalcoin-canonical_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='canonical_tests.cpp' object='test_digitalcoin-canonical_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-canonical_tests.obj `if test -f 'canonical_tests.cpp'; then $(CYGPATH_W) 'canonical_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/canonical_tests.cpp'; fi`

test_digitalcoin-checkblock_tests.o: checkblock_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-checkblock_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-checkblock_tests.Tpo -c -o test_digitalcoin-checkblock_tests.o `test -f 'checkblock_tests.cpp' || echo '$(srcdir)/'`checkblock_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-checkblock_tests.Tpo $(DEPDIR)/test_digitalcoin-checkblock_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='checkblock_tests.cpp' object='test_digitalcoin-checkblock_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-checkblock_tests.o `test -f 'checkblock_tests.cpp' || echo '$(srcdir)/'`checkblock_tests.cpp

test_digitalcoin-checkblock_tests.obj: checkblock_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-checkblock_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-checkblock_tests.Tpo -c -o test_digitalcoin-checkblock_tests.obj `if test -f 'checkblock_tests.cpp'; then $(CYGPATH_W) 'checkblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/checkblock_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-checkblock_tests.Tpo $(DEPDIR)/test_digitalcoin-checkblock_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='checkblock_tests.cpp' object='test_digitalcoin-checkblock_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-checkblock_tests.obj `if test -f 'checkblock_tests.cpp'; then $(CYGPATH_W) 'checkblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/checkblock_tests.cpp'; fi`

test_digitalcoin-Checkpoints_tests.o: Checkpoints_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-Checkpoints_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-Checkpoints_tests.Tpo -c -o test_digitalcoin-Checkpoints_tests.o `test -f 'Checkpoints_tests.cpp' || echo '$(srcdir)/'`Checkpoints_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-Checkpoints_tests.Tpo $(DEPDIR)/test_digitalcoin-Checkpoints_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Checkpoints_tests.cpp' object='test_digitalcoin-Checkpoints_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-Checkpoints_tests.o `test -f 'Checkpoints_tests.cpp' || echo '$(srcdir)/'`Checkpoints_tests.cpp

test_digitalcoin-Checkpoints_tests.obj: Checkpoints_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-Checkpoints_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-Checkpoints_tests.Tpo -c -o test_digitalcoin-Checkpoints_tests.obj `if test -f 'Checkpoints_tests.cpp'; then $(CYGPATH_W) 'Checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/Checkpoints_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-Checkpoints_tests.Tpo $(DEPDIR)/test_digitalcoin-Checkpoints_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Checkpoints_tests.cpp' object='test_digitalcoin-Checkpoints_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-Checkpoints_tests.obj `if test -f 'Checkpoints_tests.cpp'; then $(CYGPATH_W) 'Checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/Checkpoints_tests.cpp'; fi`

test_digitalcoin-compress_tests.o: compress_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-compress_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-compress_tests.Tpo -c -o test_digitalcoin-compress_tests.o `test -f 'compress_tests.cpp' || echo '$(srcdir)/'`compress_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-compress_tests.Tpo $(DEPDIR)/test_digitalcoin-compress_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='compress_tests.cpp' object='test_digitalcoin-compress_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-compress_tests.o `test -f 'compress_tests.cpp' || echo '$(srcdir)/'`compress_tests.cpp

test_digitalcoin-compress_tests.obj: compress_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-compress_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-compress_tests.Tpo -c -o test_digitalcoin-compress_tests.obj `if test -f 'compress_tests.cpp'; then $(CYGPATH_W) 'compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/compress_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-compress_tests.Tpo $(DEPDIR)/test_digitalcoin-compress_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='compress_tests.cpp' object='test_digitalcoin-compress_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-compress_tests.obj `if test -f 'compress_tests.cpp'; then $(CYGPATH_W) 'compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/compress_tests.cpp'; fi`

test_digitalcoin-DoS_tests.o: DoS_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-DoS_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-DoS_tests.Tpo -c -o test_digitalcoin-DoS_tests.o `test -f 'DoS_tests.cpp' || echo '$(srcdir)/'`DoS_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-DoS_tests.Tpo $(DEPDIR)/test_digitalcoin-DoS_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DoS_tests.cpp' object='test_digitalcoin-DoS_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-DoS_tests.o `test -f 'DoS_tests.cpp' || echo '$(srcdir)/'`DoS_tests.cpp

test_digitalcoin-DoS_tests.obj: DoS_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-DoS_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-DoS_tests.Tpo -c -o test_digitalcoin-DoS_tests.obj `if test -f 'DoS_tests.cpp'; then $(CYGPATH_W) 'DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/DoS_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-DoS_tests.Tpo $(DEPDIR)/test_digitalcoin-DoS_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DoS_tests.cpp' object='test_digitalcoin-DoS_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-DoS_tests.obj `if test -f 'DoS_tests.cpp'; then $(CYGPATH_W) 'DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/DoS_tests.cpp'; fi`

test_digitalcoin-getarg_tests.o: getarg_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-getarg_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-getarg_tests.Tpo -c -o test_digitalcoin-getarg_tests.o `test -f 'getarg_tests.cpp' || echo '$(srcdir)/'`getarg_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-getarg_tests.Tpo $(DEPDIR)/test_digitalcoin-getarg_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='getarg_tests.cpp' object='test_digitalcoin-getarg_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-getarg_tests.o `test -f 'getarg_tests.cpp' || echo '$(srcdir)/'`getarg_tests.cpp

test_digitalcoin-getarg_tests.obj: getarg_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-getarg_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-getarg_tests.Tpo -c -o test_digitalcoin-getarg_tests.obj `if test -f 'getarg_tests.cpp'; then $(CYGPATH_W) 'getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/getarg_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-getarg_tests.Tpo $(DEPDIR)/test_digitalcoin-getarg_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='getarg_tests.cpp' object='test_digitalcoin-getarg_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-getarg_tests.obj `if test -f 'getarg_tests.cpp'; then $(CYGPATH_W) 'getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/getarg_tests.cpp'; fi`

test_digitalcoin-key_tests.o: key_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-key_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-key_tests.Tpo -c -o test_digitalcoin-key_tests.o `test -f 'key_tests.cpp' || echo '$(srcdir)/'`key_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-key_tests.Tpo $(DEPDIR)/test_digitalcoin-key_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='key_tests.cpp' object='test_digitalcoin-key_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-key_tests.o `test -f 'key_tests.cpp' || echo '$(srcdir)/'`key_tests.cpp

test_digitalcoin-key_tests.obj: key_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-key_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-key_tests.Tpo -c -o test_digitalcoin-key_tests.obj `if test -f 'key_tests.cpp'; then $(CYGPATH_W) 'key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/key_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-key_tests.Tpo $(DEPDIR)/test_digitalcoin-key_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='key_tests.cpp' object='test_digitalcoin-key_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-key_tests.obj `if test -f 'key_tests.cpp'; then $(CYGPATH_W) 'key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/key_tests.cpp'; fi`

test_digitalcoin-main_tests.o: main_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-main_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-main_tests.Tpo -c -o test_digitalcoin-main_tests.o `test -f 'main_tests.cpp' || echo '$(srcdir)/'`main_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-main_tests.Tpo $(DEPDIR)/test_digitalcoin-main_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main_tests.cpp' object='test_digitalcoin-main_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-main_tests.o `test -f 'main_tests.cpp' || echo '$(srcdir)/'`main_tests.cpp

test_digitalcoin-main_tests.obj: main_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-main_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-main_tests.Tpo -c -o test_digitalcoin-main_tests.obj `if test -f 'main_tests.cpp'; then $(CYGPATH_W) 'main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/main_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-main_tests.Tpo $(DEPDIR)/test_digitalcoin-main_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main_tests.cpp' object='test_digitalcoin-main_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-main_tests.obj `if test -f 'main_tests.cpp'; then $(CYGPATH_W) 'main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/main_tests.cpp'; fi`

test_digitalcoin-miner_tests.o: miner_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-miner_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-miner_tests.Tpo -c -o test_digitalcoin-miner_tests.o `test -f 'miner_tests.cpp' || echo '$(srcdir)/'`miner_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-miner_tests.Tpo $(DEPDIR)/test_digitalcoin-miner_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='miner_tests.cpp' object='test_digitalcoin-miner_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-miner_tests.o `test -f 'miner_tests.cpp' || echo '$(srcdir)/'`miner_tests.cpp

test_digitalcoin-miner_tests.obj: miner_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-miner_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-miner_tests.Tpo -c -o test_digitalcoin-miner_tests.obj `if test -f 'miner_tests.cpp'; then $(CYGPATH_W) 'miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-miner_tests.Tpo $(DEPDIR)/test_digitalcoin-miner_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='miner_tests.cpp' object='test_digitalcoin-miner_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-miner_tests.obj `if test -f 'miner_tests.cpp'; then $(CYGPATH_W) 'miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_tests.cpp'; fi`

test_digitalcoin-mruset_tests.o: mruset_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-mruset_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-mruset_tests.Tpo -c -o test_digitalcoin-mruset_tests.o `test -f 'mruset_tests.cpp' || echo '$(srcdir)/'`mruset_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-mruset_tests.Tpo $(DEPDIR)/test_digitalcoin-mruset_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mruset_tests.cpp' object='test_digitalcoin-mruset_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-mruset_tests.o `test -f 'mruset_tests.cpp' || echo '$(srcdir)/'`mruset_tests.cpp

test_digitalcoin-mruset_tests.obj: mruset_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-mruset_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-mruset_tests.Tpo -c -o test_digitalcoin-mruset_tests.obj `if test -f 'mruset_tests.cpp'; then $(CYGPATH_W) 'mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/mruset_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-mruset_tests.Tpo $(DEPDIR)/test_digitalcoin-mruset_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mruset_tests.cpp' object='test_digitalcoin-mruset_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-mruset_tests.obj `if test -f 'mruset_tests.cpp'; then $(CYGPATH_W) 'mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/mruset_tests.cpp'; fi`

test_digitalcoin-multisig_tests.o: multisig_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-multisig_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-multisig_tests.Tpo -c -o test_digitalcoin-multisig_tests.o `test -f 'multisig_tests.cpp' || echo '$(srcdir)/'`multisig_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-multisig_tests.Tpo $(DEPDIR)/test_digitalcoin-multisig_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='multisig_tests.cpp' object='test_digitalcoin-multisig_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-multisig_tests.o `test -f 'multisig_tests.cpp' || echo '$(srcdir)/'`multisig_tests.cpp

test_digitalcoin-multisig_tests.obj: multisig_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-multisig_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-multisig_tests.Tpo -c -o test_digitalcoin-multisig_tests.obj `if test -f 'multisig_tests.cpp'; then $(CYGPATH_W) 'multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/multisig_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-multisig_tests.Tpo $(DEPDIR)/test_digitalcoin-multisig_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='multisig_tests.cpp' object='test_digitalcoin-multisig_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-multisig_tests.obj `if test -f 'multisig_tests.cpp'; then $(CYGPATH_W) 'multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/multisig_tests.cpp'; fi`

test_digitalcoin-netbase_tests.o: netbase_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-netbase_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-netbase_tests.Tpo -c -o test_digitalcoin-netbase_tests.o `test -f 'netbase_tests.cpp' || echo '$(srcdir)/'`netbase_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-netbase_tests.Tpo $(DEPDIR)/test_digitalcoin-netbase_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='netbase_tests.cpp' object='test_digitalcoin-netbase_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-netbase_tests.o `test -f 'netbase_tests.cpp' || echo '$(srcdir)/'`netbase_tests.cpp

test_digitalcoin-netbase_tests.obj: netbase_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-netbase_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-netbase_tests.Tpo -c -o test_digitalcoin-netbase_tests.obj `if test -f 'netbase_tests.cpp'; then $(CYGPATH_W) 'netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-netbase_tests.Tpo $(DEPDIR)/test_digitalcoin-netbase_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='netbase_tests.cpp' object='test_digitalcoin-netbase_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-netbase_tests.obj `if test -f 'netbase_tests.cpp'; then $(CYGPATH_W) 'netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase_tests.cpp'; fi`

test_digitalcoin-pmt_tests.o: pmt_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-pmt_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-pmt_tests.Tpo -c -o test_digitalcoin-pmt_tests.o `test -f 'pmt_tests.cpp' || echo '$(srcdir)/'`pmt_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-pmt_tests.Tpo $(DEPDIR)/test_digitalcoin-pmt_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pmt_tests.cpp' object='test_digitalcoin-pmt_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-pmt_tests.o `test -f 'pmt_tests.cpp' || echo '$(srcdir)/'`pmt_tests.cpp

test_digitalcoin-pmt_tests.obj: pmt_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-pmt_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-pmt_tests.Tpo -c -o test_digitalcoin-pmt_tests.obj `if test -f 'pmt_tests.cpp'; then $(CYGPATH_W) 'pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/pmt_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-pmt_tests.Tpo $(DEPDIR)/test_digitalcoin-pmt_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pmt_tests.cpp' object='test_digitalcoin-pmt_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-pmt_tests.obj `if test -f 'pmt_tests.cpp'; then $(CYGPATH_W) 'pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/pmt_tests.cpp'; fi`

test_digitalcoin-rpc_tests.o: rpc_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-rpc_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-rpc_tests.Tpo -c -o test_digitalcoin-rpc_tests.o `test -f 'rpc_tests.cpp' || echo '$(srcdir)/'`rpc_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-rpc_tests.Tpo $(DEPDIR)/test_digitalcoin-rpc_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rpc_tests.cpp' object='test_digitalcoin-rpc_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-rpc_tests.o `test -f 'rpc_tests.cpp' || echo '$(srcdir)/'`rpc_tests.cpp

test_digitalcoin-rpc_tests.obj: rpc_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-rpc_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-rpc_tests.Tpo -c -o test_digitalcoin-rpc_tests.obj `if test -f 'rpc_tests.cpp'; then $(CYGPATH_W) 'rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-rpc_tests.Tpo $(DEPDIR)/test_digitalcoin-rpc_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rpc_tests.cpp' object='test_digitalcoin-rpc_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-rpc_tests.obj `if test -f 'rpc_tests.cpp'; then $(CYGPATH_W) 'rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc_tests.cpp'; fi`

test_digitalcoin-script_P2SH_tests.o: script_P2SH_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-script_P2SH_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-script_P2SH_tests.Tpo -c -o test_digitalcoin-script_P2SH_tests.o `test -f 'script_P2SH_tests.cpp' || echo '$(srcdir)/'`script_P2SH_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-script_P2SH_tests.Tpo $(DEPDIR)/test_digitalcoin-script_P2SH_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='script_P2SH_tests.cpp' object='test_digitalcoin-script_P2SH_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-script_P2SH_tests.o `test -f 'script_P2SH_tests.cpp' || echo '$(srcdir)/'`script_P2SH_tests.cpp

test_digitalcoin-script_P2SH_tests.obj: script_P2SH_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-script_P2SH_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-script_P2SH_tests.Tpo -c -o test_digitalcoin-script_P2SH_tests.obj `if test -f 'script_P2SH_tests.cpp'; then $(CYGPATH_W) 'script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/script_P2SH_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-script_P2SH_tests.Tpo $(DEPDIR)/test_digitalcoin-script_P2SH_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='script_P2SH_tests.cpp' object='test_digitalcoin-script_P2SH_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-script_P2SH_tests.obj `if test -f 'script_P2SH_tests.cpp'; then $(CYGPATH_W) 'script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/script_P2SH_tests.cpp'; fi`

test_digitalcoin-script_tests.o: script_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-script_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-script_tests.Tpo -c -o test_digitalcoin-script_tests.o `test -f 'script_tests.cpp' || echo '$(srcdir)/'`script_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-script_tests.Tpo $(DEPDIR)/test_digitalcoin-script_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='script_tests.cpp' object='test_digitalcoin-script_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-script_tests.o `test -f 'script_tests.cpp' || echo '$(srcdir)/'`script_tests.cpp

test_digitalcoin-script_tests.obj: script_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-script_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-script_tests.Tpo -c -o test_digitalcoin-script_tests.obj `if test -f 'script_tests.cpp'; then $(CYGPATH_W) 'script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/script_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-script_tests.Tpo $(DEPDIR)/test_digitalcoin-script_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='script_tests.cpp' object='test_digitalcoin-script_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-script_tests.obj `if test -f 'script_tests.cpp'; then $(CYGPATH_W) 'script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/script_tests.cpp'; fi`

test_digitalcoin-serialize_tests.o: serialize_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-serialize_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-serialize_tests.Tpo -c -o test_digitalcoin-serialize_tests.o `test -f 'serialize_tests.cpp' || echo '$(srcdir)/'`serialize_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-serialize_tests.Tpo $(DEPDIR)/test_digitalcoin-serialize_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='serialize_tests.cpp' object='test_digitalcoin-serialize_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-serialize_tests.o `test -f 'serialize_tests.cpp' || echo '$(srcdir)/'`serialize_tests.cpp

test_digitalcoin-serialize_tests.obj: serialize_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-serialize_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-serialize_tests.Tpo -c -o test_digitalcoin-serialize_tests.obj `if test -f 'serialize_tests.cpp'; then $(CYGPATH_W) 'serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/serialize_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-serialize_tests.Tpo $(DEPDIR)/test_digitalcoin-serialize_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='serialize_tests.cpp' object='test_digitalcoin-serialize_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-serialize_tests.obj `if test -f 'serialize_tests.cpp'; then $(CYGPATH_W) 'serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/serialize_tests.cpp'; fi`

test_digitalcoin-sigopcount_tests.o: sigopcount_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-sigopcount_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-sigopcount_tests.Tpo -c -o test_digitalcoin-sigopcount_tests.o `test -f 'sigopcount_tests.cpp' || echo '$(srcdir)/'`sigopcount_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-sigopcount_tests.Tpo $(DEPDIR)/test_digitalcoin-sigopcount_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sigopcount_tests.cpp' object='test_digitalcoin-sigopcount_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-sigopcount_tests.o `test -f 'sigopcount_tests.cpp' || echo '$(srcdir)/'`sigopcount_tests.cpp

test_digitalcoin-sigopcount_tests.obj: sigopcount_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-sigopcount_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-sigopcount_tests.Tpo -c -o test_digitalcoin-sigopcount_tests.obj `if test -f 'sigopcount_tests.cpp'; then $(CYGPATH_W) 'sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/sigopcount_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-sigopcount_tests.Tpo $(DEPDIR)/test_digitalcoin-sigopcount_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sigopcount_tests.cpp' object='test_digitalcoin-sigopcount_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-sigopcount_tests.obj `if test -f 'sigopcount_tests.cpp'; then $(CYGPATH_W) 'sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/sigopcount_tests.cpp'; fi`

test_digitalcoin-test_bitcoin.o: test_bitcoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-test_bitcoin.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-test_bitcoin.Tpo -c -o test_digitalcoin-test_bitcoin.o `test -f 'test_bitcoin.cpp' || echo '$(srcdir)/'`test_bitcoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-test_bitcoin.Tpo $(DEPDIR)/test_digitalcoin-test_bitcoin.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_bitcoin.cpp' object='test_digitalcoin-test_bitcoin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-test_bitcoin.o `test -f 'test_bitcoin.cpp' || echo '$(srcdir)/'`test_bitcoin.cpp

test_digitalcoin-test_bitcoin.obj: test_bitcoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-test_bitcoin.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-test_bitcoin.Tpo -c -o test_digitalcoin-test_bitcoin.obj `if test -f 'test_bitcoin.cpp'; then $(CYGPATH_W) 'test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test_bitcoin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-test_bitcoin.Tpo $(DEPDIR)/test_digitalcoin-test_bitcoin.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_bitcoin.cpp' object='test_digitalcoin-test_bitcoin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-test_bitcoin.obj `if test -f 'test_bitcoin.cpp'; then $(CYGPATH_W) 'test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test_bitcoin.cpp'; fi`

test_digitalcoin-transaction_tests.o: transaction_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-transaction_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-transaction_tests.Tpo -c -o test_digitalcoin-transaction_tests.o `test -f 'transaction_tests.cpp' || echo '$(srcdir)/'`transaction_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-transaction_tests.Tpo $(DEPDIR)/test_digitalcoin-transaction_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='transaction_tests.cpp' object='test_digitalcoin-transaction_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-transaction_tests.o `test -f 'transaction_tests.cpp' || echo '$(srcdir)/'`transaction_tests.cpp

test_digitalcoin-transaction_tests.obj: transaction_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-transaction_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-transaction_tests.Tpo -c -o test_digitalcoin-transaction_tests.obj `if test -f 'transaction_tests.cpp'; then $(CYGPATH_W) 'transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-transaction_tests.Tpo $(DEPDIR)/test_digitalcoin-transaction_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='transaction_tests.cpp' object='test_digitalcoin-transaction_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-transaction_tests.obj `if test -f 'transaction_tests.cpp'; then $(CYGPATH_W) 'transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_tests.cpp'; fi`

test_digitalcoin-uint256_tests.o: uint256_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-uint256_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-uint256_tests.Tpo -c -o test_digitalcoin-uint256_tests.o `test -f 'uint256_tests.cpp' || echo '$(srcdir)/'`uint256_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-uint256_tests.Tpo $(DEPDIR)/test_digitalcoin-uint256_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='uint256_tests.cpp' object='test_digitalcoin-uint256_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-uint256_tests.o `test -f 'uint256_tests.cpp' || echo '$(srcdir)/'`uint256_tests.cpp

test_digitalcoin-uint256_tests.obj: uint256_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-uint256_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-uint256_tests.Tpo -c -o test_digitalcoin-uint256_tests.obj `if test -f 'uint256_tests.cpp'; then $(CYGPATH_W) 'uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-uint256_tests.Tpo $(DEPDIR)/test_digitalcoin-uint256_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='uint256_tests.cpp' object='test_digitalcoin-uint256_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-uint256_tests.obj `if test -f 'uint256_tests.cpp'; then $(CYGPATH_W) 'uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256_tests.cpp'; fi`

test_digitalcoin-util_tests.o: util_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-util_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-util_tests.Tpo -c -o test_digitalcoin-util_tests.o `test -f 'util_tests.cpp' || echo '$(srcdir)/'`util_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-util_tests.Tpo $(DEPDIR)/test_digitalcoin-util_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util_tests.cpp' object='test_digitalcoin-util_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-util_tests.o `test -f 'util_tests.cpp' || echo '$(srcdir)/'`util_tests.cpp

test_digitalcoin-util_tests.obj: util_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-util_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-util_tests.Tpo -c -o test_digitalcoin-util_tests.obj `if test -f 'util_tests.cpp'; then $(CYGPATH_W) 'util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/util_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-util_tests.Tpo $(DEPDIR)/test_digitalcoin-util_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util_tests.cpp' object='test_digitalcoin-util_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-util_tests.obj `if test -f 'util_tests.cpp'; then $(CYGPATH_W) 'util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/util_tests.cpp'; fi`

test_digitalcoin-scriptnum_tests.o: scriptnum_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-scriptnum_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-scriptnum_tests.Tpo -c -o test_digitalcoin-scriptnum_tests.o `test -f 'scriptnum_tests.cpp' || echo '$(srcdir)/'`scriptnum_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-scriptnum_tests.Tpo $(DEPDIR)/test_digitalcoin-scriptnum_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scriptnum_tests.cpp' object='test_digitalcoin-scriptnum_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-scriptnum_tests.o `test -f 'scriptnum_tests.cpp' || echo '$(srcdir)/'`scriptnum_tests.cpp

test_digitalcoin-scriptnum_tests.obj: scriptnum_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-scriptnum_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-scriptnum_tests.Tpo -c -o test_digitalcoin-scriptnum_tests.obj `if test -f 'scriptnum_tests.cpp'; then $(CYGPATH_W) 'scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/scriptnum_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-scriptnum_tests.Tpo $(DEPDIR)/test_digitalcoin-scriptnum_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scriptnum_tests.cpp' object='test_digitalcoin-scriptnum_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-scriptnum_tests.obj `if test -f 'scriptnum_tests.cpp'; then $(CYGPATH_W) 'scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/scriptnum_tests.cpp'; fi`

test_digitalcoin-sighash_tests.o: sighash_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-sighash_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-sighash_tests.Tpo -c -o test_digitalcoin-sighash_tests.o `test -f 'sighash_tests.cpp' || echo '$(srcdir)/'`sighash_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-sighash_tests.Tpo $(DEPDIR)/test_digitalcoin-sighash_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sighash_tests.cpp' object='test_digitalcoin-sighash_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-sighash_tests.o `test -f 'sighash_tests.cpp' || echo '$(srcdir)/'`sighash_tests.cpp

test_digitalcoin-sighash_tests.obj: sighash_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-sighash_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-sighash_tests.Tpo -c -o test_digitalcoin-sighash_tests.obj `if test -f 'sighash_tests.cpp'; then $(CYGPATH_W) 'sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/sighash_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-sighash_tests.Tpo $(DEPDIR)/test_digitalcoin-sighash_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sighash_tests.cpp' object='test_digitalcoin-sighash_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-sighash_tests.obj `if test -f 'sighash_tests.cpp'; then $(CYGPATH_W) 'sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/sighash_tests.cpp'; fi`

test_digitalcoin-accounting_tests.o: accounting_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-accounting_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-accounting_tests.Tpo -c -o test_digitalcoin-accounting_tests.o `test -f 'accounting_tests.cpp' || echo '$(srcdir)/'`accounting_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-accounting_tests.Tpo $(DEPDIR)/test_digitalcoin-accounting_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='accounting_tests.cpp' object='test_digitalcoin-accounting_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-accounting_tests.o `test -f 'accounting_tests.cpp' || echo '$(srcdir)/'`accounting_tests.cpp

test_digitalcoin-accounting_tests.obj: accounting_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-accounting_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-accounting_tests.Tpo -c -o test_digitalcoin-accounting_tests.obj `if test -f 'accounting_tests.cpp'; then $(CYGPATH_W) 'accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/accounting_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-accounting_tests.Tpo $(DEPDIR)/test_digitalcoin-accounting_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='accounting_tests.cpp' object='test_digitalcoin-accounting_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-accounting_tests.obj `if test -f 'accounting_tests.cpp'; then $(CYGPATH_W) 'accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/accounting_tests.cpp'; fi`

test_digitalcoin-wallet_tests.o: wallet_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-wallet_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-wallet_tests.Tpo -c -o test_digitalcoin-wallet_tests.o `test -f 'wallet_tests.cpp' || echo '$(srcdir)/'`wallet_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-wallet_tests.Tpo $(DEPDIR)/test_digitalcoin-wallet_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wallet_tests.cpp' object='test_digitalcoin-wallet_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-wallet_tests.o `test -f 'wallet_tests.cpp' || echo '$(srcdir)/'`wallet_tests.cpp

test_digitalcoin-wallet_tests.obj: wallet_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-wallet_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-wallet_tests.Tpo -c -o test_digitalcoin-wallet_tests.obj `if test -f 'wallet_tests.cpp'; then $(CYGPATH_W) 'wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-wallet_tests.Tpo $(DEPDIR)/test_digitalcoin-wallet_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wallet_tests.cpp' object='test_digitalcoin-wallet_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-wallet_tests.obj `if test -f 'wallet_tests.cpp'; then $(CYGPATH_W) 'wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet_tests.cpp'; fi`

test_digitalcoin-rpc_wallet_tests.o: rpc_wallet_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-rpc_wallet_tests.o -MD -MP -MF $(DEPDIR)/test_digitalcoin-rpc_wallet_tests.Tpo -c -o test_digitalcoin-rpc_wallet_tests.o `test -f 'rpc_wallet_tests.cpp' || echo '$(srcdir)/'`rpc_wallet_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-rpc_wallet_tests.Tpo $(DEPDIR)/test_digitalcoin-rpc_wallet_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rpc_wallet_tests.cpp' object='test_digitalcoin-rpc_wallet_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-rpc_wallet_tests.o `test -f 'rpc_wallet_tests.cpp' || echo '$(srcdir)/'`rpc_wallet_tests.cpp

test_digitalcoin-rpc_wallet_tests.obj: rpc_wallet_tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_digitalcoin-rpc_wallet_tests.obj -MD -MP -MF $(DEPDIR)/test_digitalcoin-rpc_wallet_tests.Tpo -c -o test_digitalcoin-rpc_wallet_tests.obj `if test -f 'rpc_wallet_tests.cpp'; then $(CYGPATH_W) 'rpc_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc_wallet_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_digitalcoin-rpc_wallet_tests.Tpo $(DEPDIR)/test_digitalcoin-rpc_wallet_tests.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rpc_wallet_tests.cpp' object='test_digitalcoin-rpc_wallet_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_digitalcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_digitalcoin-rpc_wallet_tests.obj `if test -f 'rpc_wallet_tests.cpp'; then $(CYGPATH_W) 'rpc_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc_wallet_tests.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


$(LIBBITCOIN):
	$(MAKE) -C $(top_builddir)/src $(@F)

@EMBEDDED_LEVELDB_TRUE@$(LIBLEVELDB) $(LIBMEMENV):
@EMBEDDED_LEVELDB_TRUE@	$(MAKE) -C $(top_builddir)/src leveldb/$(@F)

$(LIBBITCOINQT):
	$(MAKE) -C $(top_builddir)/src/qt $(@F)

.mm.o:
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<

.rc.o:
	@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \
          echo error: could not build $@

ui_%.h: %.ui
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@
	$(SED) -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}

%.moc: %.cpp
	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}

moc_%.cpp: %.h
	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}

%.qm: %.ts
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \
	 echo error: could not build $(abs_builddir)/$@

%.pb.cc %.pb.h: %.proto
	test -f $(PROTOC) && $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)  || \
	  echo error: could not build $@

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@echo "namespace alert_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
